{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil Calibri;}}
{\*\generator Riched20 10.0.18362}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9\par
\par
NAME\par
\tab plan9.ini \f1\endash  configuration file primarily for PCs\par
\par
SYNOPSIS\par
\tab none\par
\par
DESCRIPTION\par
\tab When booting Plan 9 on a PC, the bootstrap programs described in 9boot(8) first read, via TFTP or a FAT filesystem on the boot disk, a file containing configuration information. This file, /cfg/pxe/hex\endash digits (TFTP; see 9boot(8)) or plan9.ini (FAT), looks like a shell script containing lines of the form\par
\tab name=value\par
\par
each of which defines a kernel or device parameter.\par
\par
Blank lines and Carriage Returns (\\r) are ignored. # comments are ignored, but are only recognised if # appears at the start of a line.\par
\par
For devices, the generic format of value is\par
\tab type=TYPE [port=N] [irq=N] [mem=N] [size=N] [dma=N] [ea=N]\par
\par
specifying the controller type, the base I/O port of the interface, its interrupt level, the physical starting address of any mapped memory, the length in bytes of that memory, the DMA channel, and for Ethernets an override of the physical network address. Not all elements are relevant to all devices; the relevant values and their defaults are defined below in the description of each device.\par
\par
The file is used by the bootstrap programs and the kernel to configure the hardware available, although nowadays the kernel can usually detect the attached hardware by itself. The information it contains is also passed to the boot process, and subsequently other programs, as environment variables (see boot(8)). However, values whose names begin with an asterisk * are used by the kernel and are stored in #ec rather than #e.\par
\par
The following sections describe how variables are used.\par
\par
ETHERNET\par
\par
etherX=value\par
This defines an Ethernet interface. X, a unique monotonically increasing number beginning at 0, identifies an Ethernet card to be probed at system boot. Probing stops when a card is found or there is no line for etherX+1. After probing as directed by the etherX lines, any remaining Ethernet cards that can be automatically detected are added. Almost all cards can be automatically detected. For debugging purposes, automatic probing can be disabled by specifying the line *noetherprobe=.\par
\par
Many cards are software configurable and do not require all options. Unspecified options default to the factory defaults.\par
\par
Known TYPEs are\par
igbe     The Intel 8254X Gigabit Ethernet controllers, as found on the Intel PRO/1000 adapters for copper (not fiber). Completely configurable.\par
igbepcie\par
\tab\par
\tab The Intel 8256[36], 8257[12], and 82573[ev] Gigabit Ethernet PCI\endash Express controllers. Completely configurable.\par
rtl8169The Realtek 8169 Gigabit Ethernet controller. Completely configurable.\par
ga620    Netgear GA620 and GA620T Gigabit Ethernet cards, and other cards using the Alteon Acenic chip such as the Alteon Acenic fiber and copper cards, the DEC DEGPA\endash SA and the SGI Acenic. Completely configurable.\par
dp83820National Semiconductor DP83820\endash based Gigabit Ethernet adapters, notably the D\endash Link DGE\endash 500T. Completely configurable.\par
vgbe     The VIA Velocity Gigabit Ethernet controller. Known to drive the VIA8237 (ABIT AV8), but at 100Mb/s full\endash duplex only.\par
m10g     The Myricom 10\endash Gigabit Ethernet 10G\endash PCIE\endash 8A controller. Completely configurable.\par
i82598   The Intel 8259[89] 10\endash Gigabit Ethernet PCI\endash Express controllers. Completely configurable.\par
i82557   Cards using the Intel 8255[789] Fast Ethernet PCI Bus LAN Controller such as the Intel EtherExpress PRO/100B. Completely configurable, no options need be given. If you need to force the media, specify one of the options (no value) 10BASE\endash T, 10BASE\endash 2, 10BASE\endash 5, 100BASE\endash TX, 10BASE\endash TFD,\par
\tab\par
\tab 100BASE\endash TXFD, 100BASE\endash T4, 100BASE\endash FX, or 100BASE\endash FXFD. Completely configurable.\par
2114x    Cards using the Digital Equipment (now Intel) 2114x PCI Fast Ethernet Adapter Controller, for example the Netgear FA310. Completely configurable, no options need be given. Media can be specified the same was as for the i82557. Some cards using the PNIC and PNIC2 near\endash clone chips may also work. 83815    National Semiconductor DP83815\endash based adapters, notably the Netgear FA311, Netgear FA312, and various SiS built\endash in controllers such as the SiS900. On the SiS controllers, the Ethernet address is not detected properly; specify it with an ea= attribute. Completely configurable. rtl8139The Realtek 8139 Fast Ethernet controller. Completely configurable.\par
vt6102   The VIA VT6102 Fast Ethernet Controller (Rhine II).\par
vt6105mThe VIA VT6105M Fast Ethernet Controller (Rhine III).\par
smc91cxx\par
\tab\par
\tab SMC 91cXX chip\endash based PCMCIA adapters, notably the SMC EtherEZ card.\par
elnk3    The 3COM Etherlink III series of cards including the 5x9, 59x, and 905 and 905B. Completely configurable, no options need be given. The media may be specified by setting media= to the value 10BaseT, 10Base2, 100BaseTX, 100BaseFX, aui, and mii. If you need to force full duplex, because\par
\tab\par
\tab for example the Ethernet switch does not negotiate correctly, just name the word (no value) fullduplex or 100BASE\endash TXFD. Similarly, to force 100Mbit operation, specify force100. Port 0x110 is used for the little ISA configuration dance.\par
3c589    The 3COM 3C589 series PCMCIA cards, including the 3C562 and the 589E. There is no support for the modem on the 3C562. Completely configurable, no options need be given. Defaults are\par
\tab\par
\tab port=0x240 irq=10\par
The media may be specified as media=10BaseT or media=10Base2.\par
ec2t     The Linksys Combo PCMCIA EthernetCard (EC2T), EtherFast 10/100 PCMCIA cards (PCMPC100) and integrated controllers (PCM100), the Netgear FA410TX 10/100 PCMCIA card and the Accton EtherPair\endash PCMCIA (EN2216). Completely configurable, no options need be given. Defaults are\par
\tab\par
\tab port=0x300 irq=9\par
These cards are NE2000 clones. Other NE2000 compatible PCMCIA cards may be tried with the option\par
id=string\par
where string is a unique identifier string contained in the attribute memory of the card (see pcmcia(8)); unlike most options in plan9.ini, this string is case\endash sensitive. The option dummyrr=[01] can be used to turn off (0) or on (1) a dummy remote read in the driver in such cases, depending on how NE2000 compatible they are.\par
ne2000   Not software configurable iff ISA; PCI clones or supersets are software configurable; includes the Realtek 8029 clone used by Parallels. 16\endash bit card. Defaults are\par
\tab\par
\tab port=0x300 irq=2 mem=0x04000 size=0x4000\par
The option (no value) nodummyrr is needed on some (near) clones to turn off a dummy remote read in the driver.\par
amd79c970\par
\tab\par
\tab The AMD PCnet PCI Ethernet Adapter (AM79C970). (This is the Ethernet adapter used by VMware.) Completely configurable, no options need be given.\par
wd8003   Includes WD8013 and SMC Elite and Elite Ultra cards. There are varying degrees of software configurability. Cards may be in either 8\endash bit or 16\endash bit slots. Defaults are\par
\tab\par
\tab port=0x280 irq=3 mem=0xD0000 size=0x2000\par
BUG: On many machines only the 16 bit card works.\par
sink     A /dev/null for Ethernet packets -- the interface discards sent packets and never receives any. This is used to provide a test bed for some experimental Ethernet bridging software.\par
wavelanLucent Wavelan (Orinoco) IEEE 802.11b and compatible PCMCIA cards. Compatible cards include the Dell TrueMobile 1150 and the Linksys Instant Wireless Network PC Card. Port and IRQ defaults are 0x180 and 3 respectively.\par
\tab\par
\tab These cards take a number of unique options to aid in identifying the card correctly on the 802.11b network. The network may be ad hoc or managed (i.e. use an access point):\par
mode=[adhoc, managed]\par
and defaults to managed. The 802.11b network to attach to (managed mode) or identify as (ad hoc mode), is specified by\par
essid=string\par
and defaults to a null string. The card station name is given by\par
station=string\par
and defaults to Plan 9 STA. The channel to use is given by\par
channel=number\par
where number lies in the range 1 to 16 inclusive; the channel is normally negotiated automatically.\par
If the card is capable of encryption, the following options may be used:\par
crypt=[off, on]\par
and defaults to on.\par
keyN=string\par
sets the encryption key N (where N is in the range 1 to 4 inclusive) to string; this will also set the transmit key to N (see below). There are two formats for string which depend on the length of the string. If it is exactly 5 or 13 characters long it is assumed to be an alphanumeric key; if it is exactly 10 or 26 characters long the key is assumed to be in hex format (without a leading 0x). The lengths are checked, as is the format of a hex key.\par
txkey=number\par
sets the transmit key to use to be number in the range 1 to 4 inclusive. If it is desired to exclude or include unencrypted packets\par
clear=[off, on]\par
configures reception and defaults to inclusion.\par
The defaults are intended to match the common case of a managed network with encryption and a typical entry would only require, for example\par
essid=left\endash armpit key1=afish key2=calledraawaru\par
if the port and IRQ defaults are used. These options may be set after boot by writing to the device's ctl file using a space as the separator between option and value, e.g.\par
echo 'key2 1d8f65c9a52d83c8e4b43f94af' >/net/ether0/0/ctl\par
Card\endash specific power management may be enabled/disabled by\par
pm=[on, off]\par
wavelanpci\par
\tab\par
\tab PCI Ethernet adapters that use the same Wavelan programming interface. Currently the only tested cards are those based on the Intersil Prism 2.5 chipset.\par
\par
DISKS, TAPES\par
(S)ATA controllers are autodetected.\par
\par
usbX=type=uhci\par
\par
usbX=type=ohci\par
\par
usbX=type=ehci\par
This specifies the settings for a USB UHCI, OHCI or EHCI controller. Like the Ethernet controllers, USB controllers are autodetected after scanning for the ones listed in plan9.ini. Thus, most systems will not need a usbX line. Also like the Ethernet controllers, USB autoprobing can be disabled by specifying the line *nousbprobe=.\par
\par
scsiX=value\par
This defines a SCSI interface which cannot be automatically detected by the kernel.\par
\par
Known TYPEs are\par
aha1542\par
\tab Adaptec 154x series of controllers (and clones). Almost completely configurable, only the\par
\tab port=0x300\par
option need be given.\par
\par
NCR/Symbios/LSI\endash Logic 53c8xx\endash based adapters and Mylex MultiMaster (Buslogic BT\endash *) adapters are automatically detected and need no entries.\par
\par
By default, the NCR 53c8xx driver searches for up to 32 controllers. This can be changed by setting the variable *maxsd53c8xx.\par
\par
By default the Mylex driver resets SCSI cards by using both the hard reset and SCSI bus reset flags in the driver interface. If a variable *noscsireset is defined, the SCSI bus reset flag is omitted.\par
\par
aoeif=list\par
This specifies a space\endash separated list of Ethernet interfaces to be bound at boot to the ATA\endash over\endash Ethernet driver, aoe(3). For example, aoeif=ether0 ether1. Only interfaces on this list will initially be accessible via AoE.\par
\par
aoedev=e!#\f0\'e6/aoe/shelf.slot\par
This specifies an ATA\f1\endash over\endash Ethernet device accessible via the interfaces named in aoeif on AoE shelf and slot to use as a root device for bootstrapping.\par
\par
AUDIO\par
\par
audioX=value\par
This defines a pre\endash USB sound interface.\par
\par
Known types are\par
sb16      Sound Blaster 16.\par
ess1688   A Sound Blaster clone.\par
\par
The DMA channel may be any of 5, 6, or 7. The defaults are\par
\tab port=0x220 irq=7 dma=5\par
\par
Uarts\par
Plan 9 automatically configures COM1 and COM2, if found, as eia0 (port 0x3F8, IRQ4) and eia1 (port 0x2F8, IRQ3) respectively. These devices can be disabled by adding a line:\par
\tab eiaX=disabled\par
\par
This is typically done in order to reuse the IRQ for another device.\par
\par
Plan 9 used to support various serial concentrators, including the TTC 8 serial line card and various models in the Star Gate Avanstar series of intelligent serial boards. These are no longer supported; the much simpler Perle PCI\endash Fast4, PCI\endash Fast8, and PCI\endash Fast16 controllers have taken their places. These latter cards are automatically detected and need no configuration lines.\par
\par
The line serial=type=com can be used to specify settings for a PCMCIA modem.\par
\par
mouseport=value\par
This specifies where the mouse is attached. Value can be\par
ps2   the PS2 mouse/keyboard port. The BIOS setup procedure should be used to configure the machine appropriately.\par
ps2intellimouse\par
\tab an Intellimouse on the PS2 port.\par
0     for COM1\par
1     for COM2\par
\par
modemport=value\par
Picks the UART line to call out on. This is used when connecting to a file server over an async line. Value is the number of the port.\par
\par
console=value params\par
This is used to specify the console device. The default value is cga; a number 0 or 1 specifies COM1 or COM2 respectively. A serial console is initially configured with the uart(3) configuration string b9600 l8 pn s1, specifying 9600 baud, 8 bit bytes, no parity, and one stop bit. If params is given, it will be used to further configure the uart. Notice that there is no = sign in the params syntax. For example,\par
\tab console=0 b19200 po\par
\par
would use COM1 at 19,200 baud with odd parity.\par
\par
PC CARD\par
\par
pccard0=disabled\par
Disable probing for and automatic configuration of PC card controllers.\par
\par
pcmciaX=type=XXX    irq=irq\par
If the default IRQ for the PCMCIA is correct, this entry can be omitted. The value of type is ignored.\par
\par
pcmcia0=disabled\par
Disable probing for and automatic configuration of PCMCIA controllers.\par
\par
NVRAM\par
\par
nvram=file\par
\par
nvrlen=\par
\par
length\par
\par
nvroff=\par
\par
offset\par
This is used to specify an nvram device and optionally the length of the ram and read/write offset to use. These values are consulted by readnvram (see authsrv(2)). The most common use of the nvram is to hold a secstore(1) password for use by factotum(4).\par
\par
nvr=value\par
This is used by the WORM file server kernel to locate a file holding information to configure the file system. The file cannot live on a SCSI disk. The default is fd!0!plan9.nvr (sic), unless bootfile is set, in which case it is plan9.nvr on the same disk as bootfile. The syntax is either fd!unit!name or hd!unit!name where unit is the numeric unit id. This variant syntax is a vestige of the file server kernel's origins.\par
\par
BOOTING\par
\par
bootfile=value\par
This is used to direct the actions of the bootstrap programs by naming the device and file from which to load the kernel.\par
\par
rootdir=dir\par
\par
rootspec=spec\par
These are used by the bootstrap programs to identify the directory dir to make the root directory for the kernel, and the file system specifier spec (see mount in bind(2)) on which it can be found. These are usually used to test variant file systems for distributions, etc.\par
\par
bootargs=args\par
The value of this variable is passed to boot(8) by the kernel as the name of the root file system. It is typically used to specify additional arguments to pass to kfs(4) or ipconfig(8). For example, if the system is to run from a local kfs(4) partition, the definition might read bootargs=local!#S/sdC0/fs. See boot(8) for more.\par
\par
nobootprompt=root\par
Suppress the root from prompt and use root as the answer instead.\par
\par
user=user\par
Suppress the user prompt and use user as the answer instead.\par
\par
debugfactotum=\par
Causes boot(8) to start factotum with the \endash p option, so that it can be debugged.\par
\par
factotumopts=options\par
Causes boot(8) to start factotum with the given options, which must be a single word (i.e., contain no whitespace).\par
\par
venti=value\par
When booting from a local fossil server backed by a local or remote venti server, this variable specifies how to establish the connection to the venti server. See boot(8) for more.\par
\par
cfs=partition\par
This names the file holding the disk partition for the cache file system, cfs(4). Extending the bootargs example, one would write cfs=#S/sdC0/cache.\par
\par
bootdisk=value\par
This deprecated variable was used to specify the disk used by the cache file system and other disk\endash resident services. It is superseded by bootargs and cfs.\par
\par
partition=value\par
This defines the partition table 9load(8) will examine to find disk partitioning information. By default, a partition table in a Plan 9 partition is consulted; if no such table is found, an old\endash Plan 9 partition table on the next\endash to\endash last or last sector of the disk is consulted. A value of new consults only the first table, old only the second.\par
\par
readparts=\par
Causes boot(8) to look for MBR and Plan 9 partition tables on all sd(3) disks, even before factotum is started, so NVRAM, for example, may be found. On PCs, 9load (but not 9boot) normally does this and passes the partitions found in #ec/sdCnpart.\par
\par
fs=a.b.c.d\par
\par
auth=a.b.c.d\par
These specify the IP address of the file and authentication server to use when mounting a network\endash provided root file system. They are used only if the addresses cannot be determined via DHCP.\par
\par
PROCESSOR\par
\par
*norealmode=\par
The PC kernel switches the processor to 16\endash bit real mode to run BIOS interrupts, for example to find the memory map or to enable VESA. This variable disables such switches.\par
\par
*noe820scan=\par
When available, the PC kernel uses the BIOS E820 memory map to size memory. This variable disables the scan.\par
\par
*maxmem=address\par
This defines the maximum physical address that the system will scan when sizing memory. By default the PC operating system will scan up to 3.75 gigabytes (0xF0000000, the base of kernel virtual address space), but setting *maxmem will limit the scan. *maxmem must be less than 3.75 gigabytes. This variable is not consulted if using the E820 memory map.\par
\par
*kernelpercent=percent\par
This defines the percentage of available memory reserved for the kernel allocation pool. The remainder is left for user processes. The default percent is 30 on CPU servers, 60 on terminals with less than 16MB of memory, and 40 on terminals with memories of 16MB or more. Terminals use more kernel memory because draw(3) maintains its graphic images in kernel memory. This deprecated option is rarely necessary in newer kernels.\par
\par
*nomce=value\par
If machine check exceptions are supported by the processor, then they are enabled by default. Setting this variable to 1 causes them to be disabled even when available.\par
\par
*nomp=\par
A multiprocessor machine will enable all processors by default. Setting *nomp restricts the kernel to starting only one processor and using the traditional interrupt controller.\par
\par
*ncpu=cpus\par
Setting *ncpu restricts the kernel to starting at most cpus processors.\par
\par
*pcimaxbno=bno\par
Limits the maximum bus number probed on a PCI bus (default 7). For example, a bno of 1 should suffice on a 'standard' motherboard with an AGP slot. This, and *pcimaxdno below are rarely used and only on troublesome or suspect hardware.\par
\par
*pcimaxdno=dno\par
Limits the maximum device number probed on a PCI bus (default 31).\par
\par
*nopcirouting=\par
Disable pci routing during boot. May solve interrupt routing problems on certain machines.\par
\par
*nodumpstack=\par
Disable printing a stack dump on panic. Useful if there is only a limited cga screen available, otherwise the textual information about the panic may scroll off.\par
\par
ioexclude=range\par
Specifies a list of ranges of I/O ports to exclude from use by drivers. Ranges are inclusive on both ends and separated by commas. For example:\par
\tab ioexclude=0x330\endash 0x337,0x430\endash 0x43F\par
\par
umbexclude=\par
\par
range\par
Specifies a list of ranges of UMB to exclude from use by drivers. Ranges are inclusive on both ends and separated by commas. For example:\par
\tab umbexclude=0xD1800\endash 0xD3FFF\par
\par
apm0=\par
This enables the ``advanced power management'' interface as described in apm(3) and apm(8). The main feature of the interface is the ability to watch battery life (see stats(8)). It is not on by default because it causes problems on some laptops.\par
\par
VIDEO\par
\par
monitor=monitor\par
\par
vgasize=xxyxd\par
These are used not by the kernel but by termrc (see cpurc(8)) when starting vga(8).\par
\par
*dpms=value\par
This is used to specify the screen blanking behavior of the MGA4xx video driver. Values are standby, suspend, and off. The first two specify differing levels of power saving; the third turns the monitor off completely.\par
\par
Multiple Configurations\par
\par
A plan9.ini file may contain multiple configurations, each within a block beginning with a line\par
\tab [tag]\par
A special block with the tag menu gives a list of blocks from which the user may interactively select the contents of plan9.ini. There may also be multiple blocks with the tag common which will be included in all selections; if any lines appear in plan9.ini before the first block, they are treated as a common block.\par
\par
Within the menu block the following configuration lines are allowed:\par
\par
menuitem=tag[,    description]\par
The block identified by tag will appear in the presented menu. The menu entry will consist of the tag unless the optional description is given.\par
\par
menudefault=tag[,    timeout]\par
Identifies a default block to be given in the menu selection prompt. If the optional timeout is given (in seconds), the default block will be selected if there is no user input within the timeout period.\par
\par
menuconsole=value[,    baud]\par
Selects a serial console upon which to present the menu as no console or baud configuration information will have been processed yet (the plan9.ini contents are still to be decided...).\par
\par
In response to the menu being printed, the user is prompted to select a menu item from the list. If the numeric response is followed by a p, the selected configuration is printed and the menu presented again.\par
\par
The line\par
\tab menuitem=tag\par
is prefixed to the selected configuration as an aid to user\endash level initialization scripts.\par
\par
EXAMPLES\par
\par
\tab A representative plan9.ini:\par
\tab % cat /n/c:/plan9.ini\par
ether0=type=3C509\par
mouseport=ps2\par
modemport=1\par
serial0=type=generic port=0x3E8 irq=5\par
monitor=445x\par
vgasize=1600x1200x8\par
%\par
\par
Minimum CONFIG.SYS and AUTOEXEC.BAT files to use COM2 as a console:\par
\tab % cat /n/c:/config.sys\par
SHELL=COMMAND.COM COM2 /P\par
% cat /n/c:/autoexec.bat\par
@ECHO OFF\par
PROMPT $p$g\par
PATH C:\\DOS;C:\\BIN\par
mode com2:96,n,8,1,p\par
SET TEMP=C:\\TMP\par
%\par
\par
Simple plan9.ini with multiple configurations:\par
\tab [menu]\par
menuitem=vga, Plan 9 with VGA\par
menuitem=novga, Plan 9 no automatic VGA\par
menudefault=vga\par
[vga]\par
monitor=multisync135\par
vgasize=1024x768x8\par
[novga]\par
[common]\par
ether0=type=i82557\par
audio0=type=sb16 port=0x220 irq=5 dma=1\par
\par
With this, the following menu will be presented on boot:\par
\tab Plan 9 Startup Menu:\par
====================\par
\tab 1. Plan 9 with VGA\par
2. Plan 9 no automatic VGA\par
Selection[default==1]:\par
\par
Selecting item 1 generates the following plan9.ini to be used by the remainder of the bootstrap process:\par
\tab menuitem=vga\par
monitor=multisync135\par
vgasize=1024x768x8\par
ether0=type=i82557\par
audio0=type=sb16 port=0x220 irq=5 dma=1\par
\par
and selecting item 2:\par
\tab menuitem=novga\par
ether0=type=i82557\par
audio0=type=sb16 port=0x220 irq=5 dma=1\par
\par
SEE ALSO\par
\tab 9boot(8), booting(8), boot(8)\par
\par
BUGS\par
\tab Being able to set the console device to other than a display is marginally useful on file servers; MS\endash DOS and the programs which run under it are so tightly bound to the display that it is necessary to have a display if any setup or reconfiguration programs need to be run. Also, the delay before any messages appear at boot time is disconcerting, as any error messages from the BIOS are lost.\par
\par
This idea is at best an interesting experiment that needs another iteration.\par
Copyright \f0\'a9 2016 Alcatel-Lucent. All rights reserved. \par
}
 